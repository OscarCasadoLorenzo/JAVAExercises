# General config
server.port=8081
spring.application.name=backEnterprise
secretkey=q4t6w9z$C&F)J@Nc

# ANSI ON
spring.output.ansi.enabled=always

# PostgreSQL Connection parameters
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.show-sql=true
spring.datasource.url=jdbc:postgresql://localhost:5432/virtualtravel
spring.datasource.username=postgres
spring.datasource.password=passwd
spring.jpa.hibernate.ddl-auto=update
spring.datasource.initialization-mode=always
spring.datasource.initialize=true
spring.datasource.continue-on-error=true

#EUREKA Discovery config
eureka.instance.instance-id=${spring.application.name}:${random.uuid}

# KAFKA general config
spring.kafka.consumer.properties.spring.json.trusted.packages= *

#KAFKA consumer config
spring.kafka.consumer.bootstrap-servers= localhost:9092
spring.kafka.consumer.auto-offset-reset= earliest
spring.kafka.consumer.value-deserializer= org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.key-deserializer= org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.properties.spring.json.type.mapping= PendantBookEntity:spring.springboot.EnterpriseApplication.domain.PendantBookEntity

#KAFKA producer config
spring.kafka.producer.bootstrap-servers= localhost:9092
spring.kafka.producer.key-serializer= org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer= org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties.spring.json.type.mapping= TicketOutputDTO:spring.springboot.EnterpriseApplication.insfraestructure.controller.dto.output.TicketOutputDTO


#Mail Server config
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=emailprobes01@gmail.com
spring.mail.password=lpjxkuxbzfzhcfqq
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
